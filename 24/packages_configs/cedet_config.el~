;; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;; ++++++++++++++++++++++++++++ BUILD CEDET  ++++++++++++++++++++++++++++
;; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

;; (defun byte-compile-cedet ()
;;   (load (concat package_folder "cedet-1.1/cedet-build.el"))
;;   (cedet-build-in-default-emacs)
;;   (message "CEDET BUILT"))


;; ;; DO ONLY IF NOT BUILT YET
;; (if (not (file-exists-p (concat package_folder
;;                                 "cedet-1.1/common/cedet.elc")))
;;     (byte-compile-cedet))



;; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;; ++++++++++++++++++++++++++++ CEDET CONFIG ++++++++++++++++++++++++++++
;; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

;; CEDET
;; for this do:
;; go to cedet folder
;; $  make
;; Load CEDET.
;; See cedet/common/cedet.info for configuration details.
;; IMPORTANT: For Emacs >= 23.2, you must place this *before* any
;; CEDET component (including EIEIO) gets activated by another 
;; package (Gnus, auth-source, ...).
;; (add-to-list 'load-path (concat package_folder "cedet-1.1/common/"))
(load-file (concat package_folder "cedet-1.1/common/cedet.el"))
;; (load-file "~/cedet-VERSION/common/cedet.el")

;; Enable EDE (Project Management) features
(global-ede-mode 1)

;; Enable EDE for a pre-existing C++ project
;; (ede-cpp-root-project "NAME" :file "~/myproject/Makefile")


;; Enabling Semantic (code-parsing, smart completion) features
;; Select one of the following:

;; * This enables the database and idle reparse engines
(semantic-load-enable-minimum-features)

;; * This enables some tools useful for coding, such as summary mode,
;;   imenu support, and the semantic navigator
(semantic-load-enable-code-helpers)

;; * This enables even more coding tools such as intellisense mode,
;;   decoration mode, and stickyfunc mode (plus regular code helpers)
;; (semantic-load-enable-gaudy-code-helpers)

;; * This enables the use of Exuberant ctags if you have it installed.
;;   If you use C++ templates or boost, you should NOT enable it.
;; (semantic-load-enable-all-exuberent-ctags-support)
;;   Or, use one of these two types of support.
;;   Add support for new languages only via ctags.
;; (semantic-load-enable-primary-exuberent-ctags-support)
;;   Add support for using ctags as a backup parser.
;; (semantic-load-enable-secondary-exuberent-ctags-support)

;; Enable SRecode (Template management) minor-mode.
;; (global-srecode-minor-mode 1)



;; Load CEDET.
;; See cedet/common/cedet.info for configuration details.
;; IMPORTANT: For Emacs >= 23.2, you must place this *before* any
;; CEDET component (including EIEIO) gets activated by another 
;; package (Gnus, auth-source, ...).
(load-file "~/cedet-VERSION/common/cedet.el")

;; Enable EDE (Project Management) features
(global-ede-mode 1)

;; Enable EDE for a pre-existing C++ project
;; (ede-cpp-root-project "NAME" :file "~/myproject/Makefile")


;; Enabling Semantic (code-parsing, smart completion) features
;; Select one of the following:

;; * This enables the database and idle reparse engines
(semantic-load-enable-minimum-features)

;; * This enables some tools useful for coding, such as summary mode,
;;   imenu support, and the semantic navigator
(semantic-load-enable-code-helpers)

;; * This enables even more coding tools such as intellisense mode,
;;   decoration mode, and stickyfunc mode (plus regular code helpers)
;; (semantic-load-enable-gaudy-code-helpers)

;; * This enables the use of Exuberant ctags if you have it installed.
;;   If you use C++ templates or boost, you should NOT enable it.
;; (semantic-load-enable-all-exuberent-ctags-support)
;;   Or, use one of these two types of support.
;;   Add support for new languages only via ctags.
;; (semantic-load-enable-primary-exuberent-ctags-support)
;;   Add support for using ctags as a backup parser.
;; (semantic-load-enable-secondary-exuberent-ctags-support)

;; Enable SRecode (Template management) minor-mode.
;; (global-srecode-minor-mode 1)





;; ;; ;; (add-to-list 'load-path (concat package_folder "cedet-1.1/contrib/"))

;; ;; (add-to-list 'load-path "/usr/share/emacs/site-lisp/cedet-1.1/common")
;; ;; (load-file "/usr/share/emacs/site-lisp/cedet-1.1/common/cedet.el")
;; ;; (add-to-list 'load-path "/usr/share/emacs/site-lisp/jdee-2.4.0.1/lisp")
;; ;; (require 'jde)
;; ;; (defun screen-width nil -1)
;; ;; (define-obsolete-function-alias 'make-local-hook 'ignore "21.1")

;; ;;needed if cedet is in a custom location



;; (global-ede-mode 1)                      ; Enable the Project management system
;; ;; (semantic-load-enable-code-helpers)      ; Enable prototype help and smart completion 
;; ;; (global-srecode-minor-mode 1)            ; Enable template insertion menu




;; ;; Enable EDE (Project Management) features
;; ;; (global-ede-mode 1)

;; ;;to enable code folding
;; ;; (global-semantic-tag-folding-mode)

;; ;; CTAGS
;; ;; (setq path-to-ctags "/usr/bin/ctags") ;; <- your ctags path here

;; ;; (defun create-tags (dir-name)
;; ;;   "Create tags file."
;; ;;   (interactive "DDirectory: ")
;; ;;   (shell-command
;; ;;    (format "%s -f %s/TAGS -e -R %s" path-to-ctags dir-name (directory-file-name dir-name)))
;; ;;   )

;;  ;; (require 'semanticdb-ectag)
;;  ;; (semantic-load-enable-primary-exuberent-ctags-support)



;; ;; Enabling Semantic (code parsing, smart completion) features
;; ;; (select only one)
;; ;;(semantic-load-enable-minimum-features)
;; ;; (semantic-load-enable-code-helpers)
;; ;; (semantic-load-enable-gaudy-code-helpers)
;; ;;(semantic-load-enable-all-exuberent-ctags-support)



;; (global-semantic-idle-scheduler-mode 1) ;The idle scheduler with automatically reparse buffers in idle time.
;; (global-semantic-idle-completions-mode 1) ;Display a tooltip with a list of possible completions near the cursor.
;; (global-semantic-idle-summary-mode 1) ;Display a tag summary of the lexical token under the cursor.

;; ;;to work with my include files and cedet
;; (semantic-add-system-include "/usr/include/" 'c++-mode)
;; (semantic-add-system-include "~/include" 'c++-mode)
;; (semantic-add-system-include "~/include" 'c-mode) ;;
;; (semantic-add-system-include "/opt/AMDAPP/include" 'c-mode)
;; (semantic-add-system-include "/opt/AMDAPP/include" 'c++-mode)


;; ;;To use additional features for names completion, and displaying of information for tags & classes,
;; ;; you also need to load the semantic-ia package. This could be performed with following command:
;; ;; (require 'semantic-ia)

;; ;;to work with systme include files and gcc
;; ;; (require 'semantic-gcc)



;; (defun my-c-mode-cedet-hook ()
;;   (add-to-list 'ac-sources 'ac-source-gtags)
;;   (add-to-list 'ac-sources 'ac-source-semantic))
;; (add-hook 'c-mode-common-hook 'my-c-mode-cedet-hook)



;; ;; ;;integrate semantic with Imenu
;; (defun my-semantic-hook ()
;;   (imenu-add-to-menubar "TAGS"))
;; (add-hook 'semantic-init-hooks 'my-semantic-hook)

;; ;;load Semanticdb
;; ;; (require 'semanticdb)
;; ;; (global-semanticdb-minor-mode 1)

;; ;;working with tags
;; ;; gnu global support
;; ;; (require 'semanticdb-global)
;; ;; (semanticdb-enable-gnu-global-databases 'c-mode)
;; ;; (semanticdb-enable-gnu-global-databases 'c++-mode)


;; ;; bind eassist-list-message
;; (global-set-key (kbd "C-c t") 'semantic-analyze-proto-impl-toggle)
;; (global-set-key (kbd "C-c i") 'semantic-ia-fast-jump)
;; (global-set-key (kbd "C-c o") 'semantic-mrub-switch-tags)

;; (global-set-key (kbd "C-c l") 'eassist-list-methods)
;; (global-set-key (kbd "C-c s") 'eassist-switch-h-cpp)

;; (global-set-key (kbd "C-c u") 'speedbar-update-contents)
;; (global-set-key (kbd "C-c f") 'speedbar-get-focus)


;; ;; (setq semantic-idle-scheduler-max-buffer-size 10)
;; ;; (setq speedbar-use-images nil)
;; ;; (semantic-speedbar-analysis)


;; ;; SHOW FUNCTION IN TOP OF EMACS
;; (global-semantic-stickyfunc-mode 1)

;; ;; CEDET END

