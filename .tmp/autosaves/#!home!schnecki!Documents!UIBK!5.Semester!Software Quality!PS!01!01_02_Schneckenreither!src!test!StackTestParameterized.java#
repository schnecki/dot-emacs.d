package qm.test;

import static org.junit.Assert.*;
import java.util.Arrays;
import java.util.Collection;
import java.util.Random;
import junit.framework.JUnit4TestAdapter;
import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;
import qm.Stack;

/**
 *  Unit Test for class StackTestParameterized.
 *
 *
 * Created: Wed Oct 16 21:21:06 2013
 *
 * @author <a href="mailto:manuel.schneckenreither@student.uibk.ac.at">Manuel Schneckenreither</a>
 * @version 1.0
 */
@RunWith(Parameterized.class)
public class StackTestParameterized {

    private Integer size;
    private Stack stack;

    public StackTestParameterized(int size) {
        this.size = size;
    }


    @Parameterized.Parameters
    public static Collection<Object[]> data() {
        List<Integer> list = new ArrayList<Integer>() {1, 2, 3};
        Object[][] data = new Object[][]
            { {1}, {2}, {3}, {4}, {5}, {6}, {7}, {8}, {9}, {10}};
        return Arrays.asList(data);
    }

    @Before
    public void init(){
        this.stack = new Stack(size);
    }

    /**
     * Test for method push2.
     */
    @Test (expected=StackOverflowError.class)
    public void pushErrorTest() {
        int i = 0;
        while (true) {
            pushRandomStack();
            assertEquals(stack.size(), ++i);
        }
    } // push2Test


    private void pushRandomStack() {
        stack.push(new Random().nextInt(100));
    } // pushRandomStack

}


