-- RecursiveContents.hs ---
-- 
-- Filename: RecursiveContents.hs
-- Description: 
-- Author: Manuel Schneckenreither
-- Maintainer: 
-- Created: Sa Okt 12 12:48:44 2013 (+0200)
-- Version: 
-- Package-Requires: ()
-- Last-Updated: Sa Okt 12 13:09:25 2013 (+0200)
--           By: Manuel Schneckenreither
--     Update #: 17
-- URL: 
-- Doc URL: 
-- Keywords: 
-- Compatibility: 
-- 
-- 

-- Commentary: 
-- 
-- 
-- 
-- 

-- Change Log:
-- 
-- 
-- Code:


module RecursiveContents
    ( getRecursiveContents
    ) where

import Control.Monad (forM)
import System.Directory (doesDirectoryExist, getDirectoryContents)
import System.FilePath ((</>))

                        
getRecursiveContents :: FilePath -> IO [FilePath]
getRecursiveContents topdir = do
  names <- getDirectoryContents topdir
  let properNames = filter (`notElem` [".", ".."]) names
  paths <- forM properNames $ \name -> do
    let path = topdir </> name
    isDirectory <- doesDirectoryExist path
    if isDirectory
      then getRecursiveContents path
      else return [path]
  return (concat paths)

-- 
-- RecursiveContents.hs ends here
