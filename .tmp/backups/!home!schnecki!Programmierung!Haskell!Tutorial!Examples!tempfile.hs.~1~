-- tempfile.hs --- 
-- 
-- Filename: tempfile.hs
-- Description: 
-- Author: Manuel Schneckenreither
-- Maintainer: 
-- Created: Mi Okt  9 21:45:58 2013 (+0200)
-- Version: 
-- Package-Requires: ()
-- Last-Updated: Mi Okt  9 21:53:01 2013 (+0200)
--           By: Manuel Schneckenreither
--     Update #: 1
-- URL: 
-- Doc URL: 
-- Keywords: 
-- Compatibility: 
-- 
-- 

-- Commentary: 
-- 
-- 
-- 
-- 

-- Change Log:
-- 
-- 
-- 
-- Code:


import System.IO
import System.Directory(getTemporaryDirectory, removeFile)
import System.IO.Error(catch)
import Control.Exception(finally)

-- The main entry point. Work with a temp file in myAction
main :: IO ()
main = withTempFile "mytemp.txt" myAction

{- The guts of the program.  Called with the path and handle of a temporary
   file.  When this function exits, that file will be closed and deleted
   because myAction was called from withTempFile. -}

myAction :: FilePath -> Handle -> IO ()
myAction tempname temph =
  do -- STart by displayin a greeting on the terminal
    putStrLn "Welcome to tempfile.hs"
    putStrLn ("I have a temporary file at " ++ tempname)

    Let's see what the initial postition is
    pos <- hTell temph
    putStrLn $ "My initial postition is " ++ show pos

    -- Now, write some data to the temporary file
    let tempdata = show [1..15]
    putStrLn $ "Writing one line containing " ++
    show (length tempdata) ++  " bytes: " ++
    tempdata
    hPutStrLn temph tempdata

    -- Get our new postition. This doesn't actually modify pos
--     in memory, but makes the name "pos" coresspond to a different 
-- value for the remainder of the "do" block

-- 
-- tempfile.hs ends here
